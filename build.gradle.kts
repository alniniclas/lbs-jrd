import com.github.spotbugs.SpotBugsTask
import net.ltgt.gradle.errorprone.errorprone

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    java

    // SpotBugs (successor to FindBugs)
    id("com.github.spotbugs") version "1.7.1"

    // SonarQube
    id("org.sonarqube") version "2.7"

    // Error Prone
    id("net.ltgt.errorprone") version "0.8"
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation("com.google.guava:guava:27.0.1-jre")
    implementation("com.facebook.infer.annotation:infer-annotation:0.11.2")

    errorprone("com.google.errorprone:error_prone_core:2.3.3")
}

sonarqube {
    properties {
        property("sonar.projectKey", "jrdb")
        property("sonar.projectName", "java_race_detection_benchmarks")
    }
}

tasks.withType<JavaCompile>().configureEach {
    options.errorprone.isEnabled.set(false)
}

tasks.register<JavaCompile>("errorproneCompile") {
    val cj = tasks.compileJava.get()
    source(cj.source)
    include(cj.includes)
    classpath = cj.classpath
    destinationDir = cj.destinationDir

    // Error Prone must be available in the annotation processor path
    options.annotationProcessorPath = configurations["errorprone"]
    // Enable Error Prone
    options.errorprone.isEnabled.set(true)
    // It can then be configured for the task
    options.errorprone.disableWarningsInGeneratedCode.set(true)

    // Always rerun this task (as we want the command line output from doing the actual compilation).
    outputs.upToDateWhen { false }
}

tasks.withType<SpotBugsTask>().configureEach {
    ignoreFailures = true
    effort = "max"
    reportLevel = "low"
    reports {
        xml.isEnabled = false
        html.isEnabled = true
    }
}

